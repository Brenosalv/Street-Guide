<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>